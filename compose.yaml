services:
#  server:
#    image: microservice-schedule:latest
#    container_name: microservice-schedule
#    ports:
#      - 8001:8001
#    environment:
#      - ASPNETCORE_HTTP_PORTS=8001
#      - ASPNETCORE_ENVIRONMENT=Development
#    stdin_open: true
#    tty: true
#    build:
#      context: .
#      target: final
  db:
    image: postgres:16-alpine
    restart: always
    env_file:
      - path: ./Secrets/pass.env
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./init.sql:/init.sql
    ports:
      - 5432:5432
  kafka:
    image: apache/kafka-native
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    image: kafbat/kafka-ui:main
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka

